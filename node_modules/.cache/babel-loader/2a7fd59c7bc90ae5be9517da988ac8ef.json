{"ast":null,"code":"var _jsxFileName = \"/home/nurha/socket-react-chat/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Home from '../views/home';\nimport io from 'socket.io-client';\nimport home from '../views/home';\nimport { flexbox } from '@material-ui/system';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nconst socket = io('http://localhost:8000', {\n  transports: ['websocket']\n});\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      endpoint: 'http://localhost:8000/',\n      name: 'sphe',\n      messages: [{\n        name: 'coll',\n        message: 'hello!',\n        timestamp: new Date().toISOString()\n      }],\n      newMessage: ''\n    };\n\n    this.componentDidMount = () => {\n      socket.on('chat', message => {\n        console.log('##### message', message);\n        let messages = this.state.messages;\n        console.log('prevState.messages', messages);\n        messages.push(message);\n        this.setMessages(messages);\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      socket.close();\n    };\n\n    this.setMessages = msgs => {\n      this.setState({\n        messages: msgs\n      });\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        name: name\n      });\n    };\n\n    this.handleSubmitMasseges = e => {\n      e.preventDefault();\n      socket.emit('chat', {\n        name: this.state.name,\n        message: this.state.newMessage,\n        timestamp: new Date().toISOString()\n      });\n      this.setState({\n        newMessage: ''\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          messages = _this$state.messages,\n          newMessage = _this$state.newMessage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: \"/static/images/avatar/1.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: \"Brunch this weekend?\",\n      secondary: React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Ali Connors\"), \" — I'll be in your neighborhood doing errands this…\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Travis Howard\",\n      src: \"/static/images/avatar/2.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: \"Summer BBQ\",\n      secondary: React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"to Scott, Alex, Jennifer\"), \" — Wish I could come, but I'm out of town this…\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: flexbox,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Chat\",\n      style: {\n        top: 10,\n        left: 2,\n        right: 2,\n        width: '85%'\n      },\n      placeholder: \"write message\",\n      fullWidth: true,\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: newMessage,\n      onChange: e => {\n        this.setState({\n          newMessage: e.target.value\n        });\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        width: '12%',\n        height: '56px',\n        top: 26,\n        left: 4\n      },\n      size: \"large\",\n      variant: \"outlined\",\n      onClick: this.handleSubmitMasseges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"submit\")));\n  }\n\n}","map":{"version":3,"sources":["/home/nurha/socket-react-chat/src/components/chat.js"],"names":["React","Component","AppBar","Toolbar","MenuIcon","List","ListItem","ListItemText","TextField","Button","Paper","Home","io","home","flexbox","Divider","ListItemAvatar","Avatar","Typography","socket","transports","state","endpoint","name","messages","message","timestamp","Date","toISOString","newMessage","componentDidMount","on","console","log","push","setMessages","componentWillUnmount","close","msgs","setState","handleSubmitName","handleSubmitMasseges","e","preventDefault","emit","render","open","display","bottom","top","left","right","width","target","value","shrink","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Home from '../views/home'\nimport io from 'socket.io-client';\nimport home from '../views/home';\nimport { flexbox } from '@material-ui/system';\n\n\nimport Divider from '@material-ui/core/Divider';\n\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography'\nconst socket = io('http://localhost:8000',{ transports: ['websocket'] });\n\nexport default class extends Component {\n    state = {\n        endpoint: 'http://localhost:8000/',\n        name : 'sphe',\n        messages: [{name:'coll',\n                    message:'hello!',\n                    timestamp: new Date().toISOString()\n\n                    }],\n        newMessage: ''\n    }\n    componentDidMount = () =>  {\n        socket.on('chat', message => {\n          \n          console.log('##### message', message)\n      \n            let messages = this.state.messages\n            console.log('prevState.messages', messages)\n             messages.push(message)\n             this.setMessages(messages)\n        })\n      }\n\n    componentWillUnmount = ()  => {\n        socket.close()\n    }\n    setMessages = (msgs) => {\n        this.setState( \n            {\n               messages: msgs\n            })\n\n    }\n\n    handleSubmitName = (name) => {\n        this.setState({name:name})\n    }\n    handleSubmitMasseges = (e) => {\n        e.preventDefault()\n        socket.emit('chat', {\n            name:this.state.name,\n            message: this.state.newMessage,\n            timestamp: new Date().toISOString()\n\n        })\n        \n        this.setState({\n            newMessage:''\n        })\n        \n    }\n    render() {\n        const {open, name, messages, newMessage} = this.state;\n\n        return (\n            <div>\n                <List>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Brunch this weekend?\"\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                \n                color=\"textPrimary\"\n              >\n                Ali Connors\n              </Typography>\n              {\" — I'll be in your neighborhood doing errands this…\"}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Summer BBQ\"\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                \n                color=\"textPrimary\"\n              >\n                to Scott, Alex, Jennifer\n              </Typography>\n              {\" — Wish I could come, but I'm out of town this…\"}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      \n    </List>\n                {/* <table style={{height:'500px',top: 'auto',}}>\n                    <tbody>\n                 {\n                     messages.map((message, key) => \n                         <tr key={key}>\n                             <td>{message.name}:</td>\n                             <td>{message.message}</td>\n                             <td>{message.timestamp}</td>\n                         </tr>\n                     \n                 )}\n                    </tbody>\n                 \n                </table> */}\n                <div style={{display:flexbox,bottom:0}}\n                    \n                    >\n                {/* <div style={{width:'50%'}}> */}\n                <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Chat\"\n                    style={{ top: 10, left:2, right:2, width:'85%'}}\n                    placeholder=\"write message\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={newMessage}\n                    onChange={(e)=>{\n                        this.setState({newMessage:e.target.value})\n                    }}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                    \n                >\n                </TextField>\n                {/* </div> */}\n                \n                <Button \n                    style={{width:'12%', height:'56px',top:26, left:4}}\n                    size=\"large\"\n                    variant=\"outlined\"\n                    onClick={this.handleSubmitMasseges}\n                    >\n                    submit\n                </Button>\n               \n                \n                </div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}