{"ast":null,"code":"var _jsxFileName = \"/home/sphe/machinelf-chat-app/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport io from 'socket.io-client';\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      name: null,\n      messages: [],\n      newMessage: ''\n    };\n    this.socket = io('http://localhost:8000');\n\n    this.componentDidMount = () => {\n      this.socket.on('chat', message => {\n        message.key = JSON.stringify(message);\n        this.setState(prevState => {\n          //but in fucture I will use localStorage\n          let messages = prevState.messages;\n          messages.push(message);\n          {\n            messages: messages;\n          }\n        });\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this.socket.close();\n    };\n\n    this.handleSubmitName = () => {};\n\n    this.handleSubmitMasseges = e => {\n      e.preventDefault();\n      this.socket.emit('chat', {\n        name: this.props.name,\n        message: this.state.newMessage,\n        timestamp: new Date().toISOString()\n      });\n      this.setState({\n        newMessage: ''\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          messages = _this$state.messages,\n          newMessage = _this$state.newMessage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.messages.map(message => React.createElement(\"tr\", {\n      key: message.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, message.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, message.message), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, message.timestamp))))));\n  }\n\n}","map":{"version":3,"sources":["/home/sphe/machinelf-chat-app/src/components/chat.js"],"names":["React","Component","AppBar","Toolbar","Typography","Drawer","IconButton","MenuIcon","List","ListItem","ListItemText","io","state","open","name","messages","newMessage","socket","componentDidMount","on","message","key","JSON","stringify","setState","prevState","push","componentWillUnmount","close","handleSubmitName","handleSubmitMasseges","e","preventDefault","emit","props","timestamp","Date","toISOString","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,eAAe,cAAcV,SAAd,CAAwB;AAAA;AAAA;AAAA,SACnCW,KADmC,GAC3B;AACJC,MAAAA,IAAI,EAAG,KADH;AAEJC,MAAAA,IAAI,EAAG,IAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAD2B;AAAA,SAQnCC,MARmC,GAQ1BN,EAAE,CAAC,uBAAD,CARwB;;AAAA,SAUnCO,iBAVmC,GAUf,MAAM;AACtB,WAAKD,MAAL,CAAYE,EAAZ,CAAe,MAAf,EAAuBC,OAAO,IAAI;AAC9BA,QAAAA,OAAO,CAACC,GAAR,GAAcC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAd;AACA,aAAKI,QAAL,CAAeC,SAAD,IAAgB;AAAK;AAC/B,cAAIV,QAAQ,GAAGU,SAAS,CAACV,QAAzB;AACAA,UAAAA,QAAQ,CAACW,IAAT,CAAcN,OAAd;AACI;AACIL,YAAAA,QAAQ,EAAEA,QAAQ;AACrB;AAGR,SARD;AAUH,OAZD;AAcH,KAzBkC;;AAAA,SA0BnCY,oBA1BmC,GA0BZ,MAAO;AAC1B,WAAKV,MAAL,CAAYW,KAAZ;AACH,KA5BkC;;AAAA,SA8BnCC,gBA9BmC,GA8BhB,MAAM,CAExB,CAhCkC;;AAAA,SAiCnCC,oBAjCmC,GAiCXC,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKf,MAAL,CAAYgB,IAAZ,CAAiB,MAAjB,EAAyB;AACrBnB,QAAAA,IAAI,EAAC,KAAKoB,KAAL,CAAWpB,IADK;AAErBM,QAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWI,UAFC;AAGrBmB,QAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAHU,OAAzB;AAMA,WAAKb,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAC;AADD,OAAd;AAKH,KA9CkC;AAAA;;AA+CnCsB,EAAAA,MAAM,GAAG;AAAA,wBACsC,KAAK1B,KAD3C;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,IADR,eACQA,IADR;AAAA,UACcC,QADd,eACcA,QADd;AAAA,UACwBC,UADxB,eACwBA,UADxB;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKD,QAAL,CAAcwB,GAAd,CAAkBnB,OAAO,IACrB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACN,IAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKM,OAAO,CAACA,OAAb,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACe,SAAb,CAHJ,CADJ,CAFD,CADJ,CADJ,CADJ;AAmBH;;AArEkC","sourcesContent":["import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport io from 'socket.io-client';\n\nexport default class extends Component {\n    state = {\n        open : false,\n        name : null,\n        messages: [],\n        newMessage: ''\n    }\n\n    socket = io('http://localhost:8000');\n\n    componentDidMount = () => {\n        this.socket.on('chat', message => {\n            message.key = JSON.stringify(message)\n            this.setState((prevState)  => {    //but in fucture I will use localStorage\n                let messages = prevState.messages\n                messages.push(message)\n                    {\n                        messages: messages\n                    }\n                \n\n            })\n\n        })\n    \n    }\n    componentWillUnmount = ()  => {\n        this.socket.close()\n    }\n\n    handleSubmitName = () => {\n        \n    }\n    handleSubmitMasseges = (e) => {\n        e.preventDefault()\n        this.socket.emit('chat', {\n            name:this.props.name,\n            message: this.state.newMessage,\n            timestamp: new Date().toISOString()\n\n        })\n        this.setState({\n            newMessage:''\n        })\n\n        \n    }\n    render() {\n        const {open, name, messages, newMessage} = this.state;\n\n        return (\n            <div>\n                <Table>\n                    <tbody>\n                 {\n                     this.messages.map(message => \n                         <tr key={message.key}>\n                             <td>{message.name}</td>\n                             <td>{message.message}</td>\n                             <td>{message.timestamp}</td>\n                         </tr>\n                     \n                 )}\n                    </tbody>\n                 \n                </Table>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}