{"ast":null,"code":"var _jsxFileName = \"/home/nurha/socket-react-chat/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport io from 'socket.io-client';\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: null,\n      messages: [],\n      newMessage: ''\n    };\n    this.socket = io('http://localhost:8000');\n\n    this.componentDidMount = () => {\n      this.socket.on('chat', message => {\n        message.key = JSON.stringify(message);\n        this.setState(prevState => {\n          //but in future I will use localStorage\n          let messages = prevState.messages;\n          messages.push(message);\n          {\n            messages: messages;\n          }\n        });\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this.socket.close();\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        name: name\n      });\n    };\n\n    this.handleSubmitMasseges = e => {\n      e.preventDefault();\n      this.socket.emit('chat', {\n        name: this.props.name,\n        message: this.state.newMessage,\n        timestamp: new Date().toISOString()\n      });\n      this.setState({\n        newMessage: ''\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          messages = _this$state.messages,\n          newMessage = _this$state.newMessage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.messages.map(message => React.createElement(\"tr\", {\n      key: message.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, message.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, message.message), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, message.timestamp))))), React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Label\",\n      style: {\n        margin: 8\n      },\n      placeholder: \"Placeholder\",\n      helperText: \"Full width!\",\n      fullWidth: true,\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: newMessage,\n      onChange: e => {\n        this.setState({\n          newMessage: e.target.value\n        });\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n}","map":{"version":3,"sources":["/home/nurha/socket-react-chat/src/components/chat.js"],"names":["React","Component","AppBar","Toolbar","MenuIcon","List","ListItem","ListItemText","TextField","io","state","name","messages","newMessage","socket","componentDidMount","on","message","key","JSON","stringify","setState","prevState","push","componentWillUnmount","close","handleSubmitName","handleSubmitMasseges","e","preventDefault","emit","props","timestamp","Date","toISOString","render","open","map","margin","target","value","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport io from 'socket.io-client';\n\nexport default class extends Component {\n    state = {\n        name : null,\n        messages: [],\n        newMessage: ''\n    }\n\n    socket = io('http://localhost:8000');\n\n    componentDidMount = () => {\n        this.socket.on('chat', message => {\n            message.key = JSON.stringify(message)\n            this.setState((prevState)  => {    //but in future I will use localStorage\n                let messages = prevState.messages\n                messages.push(message)\n                    {\n                        messages: messages\n                    }\n                \n\n            })\n\n        })\n    \n    }\n    componentWillUnmount = ()  => {\n        this.socket.close()\n    }\n\n    handleSubmitName = (name) => {\n        this.setState({name:name})\n\n        \n    }\n    handleSubmitMasseges = (e) => {\n        e.preventDefault()\n        this.socket.emit('chat', {\n            name:this.props.name,\n            message: this.state.newMessage,\n            timestamp: new Date().toISOString()\n\n        })\n        this.setState({\n            newMessage:''\n        })\n\n        \n    }\n    render() {\n        const {open, name, messages, newMessage} = this.state;\n\n        return (\n            <div>\n                <table>\n                    <tbody>\n                 {\n                     this.messages.map(message => \n                         <tr key={message.key}>\n                             <td>{message.name}</td>\n                             <td>{message.message}</td>\n                             <td>{message.timestamp}</td>\n                         </tr>\n                     \n                 )}\n                    </tbody>\n                 \n                </table>\n                <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Label\"\n                    style={{ margin: 8 }}\n                    placeholder=\"Placeholder\"\n                    helperText=\"Full width!\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={newMessage}\n                    onChange={(e)=>{\n                        this.setState({newMessage:e.target.value})\n                    }}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n                <Button \n                variant=\"outlined\"\n                \n                >\n                    submit\n                </Button>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}