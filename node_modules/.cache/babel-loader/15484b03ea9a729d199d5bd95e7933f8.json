{"ast":null,"code":"var _jsxFileName = \"/home/nurha/socket-react-chat/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Home from '../views/home';\nimport io from 'socket.io-client';\nimport home from '../views/home';\nimport { flexbox } from '@material-ui/system';\nconst socket = io('http://localhost:8000', {\n  transports: ['websocket']\n});\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      endpoint: 'http://localhost:8000/',\n      name: 'sphe',\n      messages: [{\n        name: 'coll',\n        message: 'hello!',\n        timestamp: new Date().toISOString()\n      }],\n      newMessage: ''\n    };\n\n    this.componentDidMount = () => {\n      socket.on('chat', message => {\n        message.key = JSON.stringify(message);\n        console.log('##### message', message);\n        this.setState(prevState => {\n          let messages = prevState.messages;\n          console.log('prevState.messages', messages);\n          messages.push(message);\n          this.setMessages(messages); // {\n          //   messages: messages\n          // }\n        });\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      socket.close();\n    };\n\n    this.setMessages = msgs => {\n      this.setState({\n        messages: msgs\n      });\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        name: name\n      });\n    };\n\n    this.handleSubmitMasseges = e => {\n      e.preventDefault();\n      socket.emit('chat', {\n        name: this.state.name,\n        message: this.state.newMessage,\n        timestamp: new Date().toISOString()\n      });\n      this.setState({\n        newMessage: ''\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          messages = _this$state.messages,\n          newMessage = _this$state.newMessage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        height: '600px',\n        top: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, messages.map((message, key) => React.createElement(\"tr\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, message.name, \":\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, message.message), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, message.timestamp))))), React.createElement(\"div\", {\n      style: {\n        display: flexbox,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Chat\",\n      style: {\n        top: 10,\n        left: 2,\n        right: 2,\n        width: '85%'\n      },\n      placeholder: \"write message\",\n      fullWidth: true,\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: newMessage,\n      onChange: e => {\n        this.setState({\n          newMessage: e.target.value\n        });\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        width: '12%',\n        top: 26,\n        left: 4\n      },\n      size: \"large\",\n      variant: \"outlined\",\n      onClick: this.handleSubmitMasseges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"submit\")));\n  }\n\n}","map":{"version":3,"sources":["/home/nurha/socket-react-chat/src/components/chat.js"],"names":["React","Component","AppBar","Toolbar","MenuIcon","List","ListItem","ListItemText","TextField","Button","Paper","Home","io","home","flexbox","socket","transports","state","endpoint","name","messages","message","timestamp","Date","toISOString","newMessage","componentDidMount","on","key","JSON","stringify","console","log","setState","prevState","push","setMessages","componentWillUnmount","close","msgs","handleSubmitName","handleSubmitMasseges","e","preventDefault","emit","render","open","height","top","map","display","bottom","left","right","width","target","value","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Home from '../views/home'\nimport io from 'socket.io-client';\nimport home from '../views/home';\nimport { flexbox } from '@material-ui/system';\nconst socket = io('http://localhost:8000',{ transports: ['websocket'] });\n\nexport default class extends Component {\n    state = {\n        endpoint: 'http://localhost:8000/',\n        name : 'sphe',\n        messages: [{name:'coll',\n                    message:'hello!',\n                    timestamp: new Date().toISOString()\n\n                    }],\n        newMessage: ''\n    }\n   \n\n    componentDidMount = () =>  {\n        socket.on('chat', message => {\n          message.key = JSON.stringify(message)\n          console.log('##### message', message)\n         this.setState((prevState) => {\n            let messages = prevState.messages\n            console.log('prevState.messages', messages)\n             messages.push(message)\n             this.setMessages(messages)\n             \n            // {\n            //   messages: messages\n            // }\n          })\n        })\n      }\n\n     \n    componentWillUnmount = ()  => {\n        socket.close()\n    }\n    setMessages = (msgs) => {\n        this.setState( \n            {\n               messages: msgs\n            })\n\n    }\n\n    handleSubmitName = (name) => {\n        this.setState({name:name})\n    }\n    handleSubmitMasseges = (e) => {\n        e.preventDefault()\n        socket.emit('chat', {\n            name:this.state.name,\n            message: this.state.newMessage,\n            timestamp: new Date().toISOString()\n\n        })\n        \n        this.setState({\n            newMessage:''\n        })\n        \n    }\n    render() {\n        const {open, name, messages, newMessage} = this.state;\n\n        return (\n            <div>\n                <table style={{height:'600px',top: 'auto',}}>\n                    <tbody>\n                 {\n                     messages.map((message, key) => \n                         <tr key={key}>\n                             <td>{message.name}:</td>\n                             <td>{message.message}</td>\n                             <td>{message.timestamp}</td>\n                         </tr>\n                     \n                 )}\n                    </tbody>\n                 \n                </table>\n                <div style={{display:flexbox,bottom:0}}\n                    \n                    >\n                {/* <div style={{width:'50%'}}> */}\n                <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Chat\"\n                    style={{ top: 10, left:2, right:2, width:'85%'}}\n                    placeholder=\"write message\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={newMessage}\n                    onChange={(e)=>{\n                        this.setState({newMessage:e.target.value})\n                    }}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                    \n                >\n                    \n                   \n                  \n                </TextField>\n                {/* </div> */}\n                \n                <Button \n                    style={{width:'12%', top:26, left:4}}\n                    size=\"large\"\n                    variant=\"outlined\"\n                    onClick={this.handleSubmitMasseges}\n                    >\n                    submit\n                </Button>\n               \n                \n                </div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}