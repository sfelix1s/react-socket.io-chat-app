{"ast":null,"code":"var _jsxFileName = \"/home/nurha/socket-react-chat/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport io from 'socket.io-client';\nimport { flexbox } from '@material-ui/system';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nconst socket = io('http://localhost:8000', {\n  transports: ['websocket']\n});\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      endpoint: 'http://localhost:8000/',\n      name: JSON.parse(localStorage.getItem('name')),\n      messages: [],\n      newMessage: ''\n    };\n\n    this.componentDidMount = () => {\n      socket.on('chat', message => {\n        let messages = this.state.messages;\n        messages.push(message);\n        this.setMessages(messages);\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      socket.close();\n    };\n\n    this.setMessages = msgs => {\n      this.setState({\n        messages: msgs\n      });\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        name: name\n      });\n    };\n\n    this.handleSubmitMasseges = e => {\n      e.preventDefault();\n      socket.emit('chat', {\n        name: this.state.name,\n        message: this.state.newMessage,\n        timestamp: new Date().toISOString()\n      });\n      this.setState({\n        newMessage: ''\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          messages = _this$state.messages,\n          newMessage = _this$state.newMessage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(List, {\n      style: {\n        height: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, messages.map((message, key) => [React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: \"/static/images/avatar/1.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: message.timestamp,\n      secondary: React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, message.name), ' - ', message.message, \",\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })])), React.createElement(\"div\", {\n      style: {\n        display: flexbox,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      position: \"fixed\",\n      id: \"outlined-full-width\",\n      label: \"Chat\",\n      style: {\n        top: 10,\n        left: 2,\n        right: 2,\n        width: '85%',\n        bottom: 0\n      },\n      placeholder: \"write message\",\n      fullWidth: true,\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: newMessage,\n      onChange: e => {\n        this.setState({\n          newMessage: e.target.value\n        });\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Button, {\n      position: \"fixed\",\n      style: {\n        width: '12%',\n        height: '56px',\n        top: 26,\n        left: 4,\n        bottom: 0\n      },\n      size: \"large\",\n      variant: \"outlined\",\n      onClick: this.handleSubmitMasseges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"submit\")));\n  }\n\n}","map":{"version":3,"sources":["/home/nurha/socket-react-chat/src/components/chat.js"],"names":["React","Component","List","ListItem","ListItemText","TextField","Button","io","flexbox","Divider","ListItemAvatar","Avatar","Typography","socket","transports","state","endpoint","name","JSON","parse","localStorage","getItem","messages","newMessage","componentDidMount","on","message","push","setMessages","componentWillUnmount","close","msgs","setState","handleSubmitName","handleSubmitMasseges","e","preventDefault","emit","timestamp","Date","toISOString","render","open","height","map","key","display","bottom","top","left","right","width","target","value","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport io from 'socket.io-client';\nimport { flexbox } from '@material-ui/system';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography'\nconst socket = io('http://localhost:8000',{ transports: ['websocket'] });\n\nexport default class extends Component {\n    state = {\n        endpoint: 'http://localhost:8000/',\n        name : JSON.parse(localStorage.getItem('name')),\n        messages: [],\n        newMessage: ''\n    }\n    componentDidMount = () =>  {\n        socket.on('chat', message => {\n          let messages = this.state.messages\n            messages.push(message)\n            this.setMessages(messages)\n        })\n      }\n\n    componentWillUnmount = ()  => {\n        socket.close()\n    }\n    setMessages = (msgs) => {\n        this.setState( \n            {\n               messages: msgs\n            })\n    }\n\n    handleSubmitName = (name) => {\n        this.setState({name:name})\n    }\n    handleSubmitMasseges = (e) => {\n        e.preventDefault()\n        socket.emit('chat', {\n            name:this.state.name,\n            message: this.state.newMessage,\n            timestamp: new Date().toISOString()\n\n        })\n        \n        this.setState({\n            newMessage:''\n        })\n        \n    }\n    render() {\n        const {open, name, messages, newMessage} = this.state;\n\n        return (\n            <div>\n                <List style={{height:'500px'}}>\n                \n                     {\n                        \n                         messages.map((message, key) => [\n                           \n                         <ListItem alignItems=\"flex-start\" key={key}>\n                        \n                        <ListItemAvatar>\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={message.timestamp}\n                            secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"textPrimary\"\n                                >\n                                {message.name}\n                                </Typography>\n                                {' - '}{message.message},\n                            </React.Fragment>\n                            \n                              }\n                        />\n                         \n                    </ListItem>,\n                    <Divider variant=\"inset\" component=\"li\" />\n                     ]\n                 )}\n             </List>\n\n                \n                <div style={{display:flexbox,bottom:0}}>\n               \n                    <TextField\n                        position=\"fixed\"\n                        id=\"outlined-full-width\"\n                        label=\"Chat\"\n                        style={{ top: 10, left:2, right:2, width:'85%',bottom:0}}\n                        placeholder=\"write message\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={newMessage}\n                        onChange={(e)=>{\n                            this.setState({newMessage:e.target.value})\n                        }}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                    >\n                    </TextField>\n              \n                    <Button \n                        position=\"fixed\"\n                        style={{width:'12%', height:'56px',top:26, left:4, bottom:0}}\n                        size=\"large\"\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitMasseges}\n                    >\n                    submit\n                    </Button>\n               \n                \n                </div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}