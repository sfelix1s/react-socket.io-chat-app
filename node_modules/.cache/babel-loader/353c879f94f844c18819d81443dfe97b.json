{"ast":null,"code":"var _jsxFileName = \"/home/nurha/socket-react-chat/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Home from '../views/home';\nimport io from 'socket.io-client';\nimport home from '../views/home';\nconst socket = io('http://localhost:8000');\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: null,\n      messages: ['coll'],\n      newMessage: ''\n    };\n\n    this.componentWillUnmount = () => {\n      this.socket.close();\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        name: name\n      });\n    };\n\n    this.handleSubmitMasseges = e => {\n      e.preventDefault();\n      this.socket.emit('chat', {\n        name: this.props.name,\n        message: this.state.newMessage,\n        timestamp: new Date().toISOString()\n      });\n      this.setState({\n        newMessage: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on('chat', message => {\n      message.key = JSON.stringify(message); //   this.setState((prevState) => {\n      //     let messages = prevState.messages\n      //     messages.push(message)\n      //     {\n      //       messages: messages\n      //     }\n      //   })\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          messages = _this$state.messages,\n          newMessage = _this$state.newMessage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, messages.map(message => React.createElement(\"tr\", {\n      key: message.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, message.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, message.message), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, message.timestamp))))), React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Label\",\n      style: {\n        margin: 8,\n        right: 12\n      },\n      placeholder: \"write message\",\n      helperText: \"Full width!\",\n      fullWidth: true,\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: newMessage,\n      onChange: e => {\n        console.log(e.target.value);\n        this.setState({\n          newMessage: e.target.value\n        });\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n}","map":{"version":3,"sources":["/home/nurha/socket-react-chat/src/components/chat.js"],"names":["React","Component","AppBar","Toolbar","MenuIcon","List","ListItem","ListItemText","TextField","Button","Home","io","home","socket","state","name","messages","newMessage","componentWillUnmount","close","handleSubmitName","setState","handleSubmitMasseges","e","preventDefault","emit","props","message","timestamp","Date","toISOString","componentDidMount","on","key","JSON","stringify","render","open","map","margin","right","console","log","target","value","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport Home from '../views/home'\nimport io from 'socket.io-client';\nimport home from '../views/home';\nconst socket = io('http://localhost:8000');\n\nexport default class extends Component {\n    state = {\n        name : null,\n        messages: ['coll'],\n        newMessage: ''\n    }\n\n    componentDidMount() {\n        this.socket.on('chat', message => {\n          message.key = JSON.stringify(message)\n        //   this.setState((prevState) => {\n        //     let messages = prevState.messages\n        //     messages.push(message)\n        //     {\n        //       messages: messages\n        //     }\n        //   })\n        })\n      }\n    componentWillUnmount = ()  => {\n        this.socket.close()\n    }\n\n    handleSubmitName = (name) => {\n        this.setState({name:name})\n\n        \n    }\n    handleSubmitMasseges = (e) => {\n        e.preventDefault()\n        this.socket.emit('chat', {\n            name:this.props.name,\n            message: this.state.newMessage,\n            timestamp: new Date().toISOString()\n\n        })\n        this.setState({\n            newMessage:''\n        })\n    }\n    render() {\n        const {open, name, messages, newMessage} = this.state;\n\n        return (\n            <div>\n                <table>\n                    <tbody>\n                 {\n                     messages.map(message => \n                         <tr key={message.key}>\n                             <td>{message.name}</td>\n                             <td>{message.message}</td>\n                             <td>{message.timestamp}</td>\n                         </tr>\n                     \n                 )}\n                    </tbody>\n                 \n                </table>\n                <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Label\"\n                    style={{ margin: 8 , right:12}}\n                    placeholder=\"write message\"\n                    helperText=\"Full width!\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={newMessage}\n                    onChange={(e)=>{\n                        console.log(e.target.value)\n                        this.setState({newMessage:e.target.value})\n                    }}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n                <Button \n                variant=\"outlined\"\n                \n                >\n                    submit\n                </Button>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}